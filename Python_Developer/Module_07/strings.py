print('Методы форматирования строк\n')
print('\tМетод ' + str(1) + ': ' + "КОНКАТЕНАЦИЯ\n")
print('\tМетод 2. Способ форматирования с использованием %s' % 'символа "%":')
print('Устаревший. Но можно %s Потому надо понимать.' % 'встретить в старых кодах.')
print('Меня зовут %s, мне %s' % ('Юрий', 63))  # КОРТЕЖ!
print('Меня зовут %(name)s, мне %(year)s' % {'name': 'Юрий', 'year': 63})  # СЛОВАРЬ!
print()
print('\tМетод 3. {}:'.format('"format"'))
print('В строке добавляются {}, после чего вызывается {}, \n'
      'в который передаются параметры {}'
      .format('фигурные скобки', 'метод «format»', '(позиционные и именованные)'))
print('Я учусь в {}{}'.format('Urban', '-University'))
print('А можно и так - указание позиций аргументов:')
print('Я учусь в {1}{0}'.format('-University', 'Urban'))
print('Можно один параметр использовать несколько раз в строке: ')
print('Я учусь в {1}{0} {1} {1} {1}{0}'.format('-University', 'Urban'))
print('Можно использовать и именованные параметры:')
print('Я учусь в {name}{title} {name} {name} {name}{title}'.format(title='-University', name='Urban'))
print()
print('\tМетод 4. Самый новый способ - F-строка:')
a, b, c, d, e, f = 'дает', 'огромные', 'возможности', 'для', 'динамического', 'форматирования'
print(f'Позволяет вставлять любой код прямо в строку, что {a} {b} {c} {d} {e} {f}\n')
print('\tКогда стоит использовать метод «format» в отличие от f-строк?')
print('Например, в отдельном файле хранится текст. Там есть обозначения с использованием\n'
      'фигурных скобок, и на их месте будут подставляться значения из переменных.\n'
      'Однако! Если мы импортируем этот текст в основной файл и в момент импорта\n'
      'переменные еще не определены, возникнет ошибка.\n')
print('Использование метода format позволяет вставить импортированную строку и подставить\n'
      'значения переменных, даже если они не были определены в момент импорта.')

