# Домашнее задание по теме "Сложные моменты и исключения в стеке вызовов функции"

# Задача "План перехват"

# принимает коллекцию numbers, подсчитывает сумму чисел и кол-во неверных данных:
def personal_sum(numbers) -> tuple:
    incorrect_data = 0  # неверные данные
    result = 0  # сумма чисел
    for i in numbers:
        try:
            result += i
        except TypeError:
            incorrect_data += 1

    return result, incorrect_data


# принимает коллекцию и возвращает среднее арифметическое:
def calculate_average(numbers) -> float:
    number_count = 0  # счетчик количества чисел в коллекции
    try:  # пробуем проитерировать коллекцию:
        for num in numbers:
            try:  # разбираемся с данными в numbers:
                if isinstance(num, int) or isinstance(num, float):  # это число?
                    number_count += 1
                else:  # не число?
                    raise TypeError
            except TypeError:
                print(f'Некорректный тип данных для подсчёта суммы - {num}')
    except TypeError:  # тип данных - не коллекция
        print('В numbers записан некорректный тип данных')
        return None
    # среднее арифметическое:
    try:
        result = personal_sum(numbers)[0] / number_count
    except ZeroDivisionError:  # страховка от деления на ноль
        return 0

    return result


# Пример выполнения программы:
if __name__ == '__main__':
    print(f'Результат 1: {calculate_average("1, 2, 3")}')  # Строка перебирается, но каждый символ - строковый тип
    print(f'Результат 2: {calculate_average([1, "Строка", 3, "Ещё Строка"])}')  # Учитываются только 1 и 3
    print(f'Результат 3: {calculate_average(567)}')  # Передана не коллекция
    print(f'Результат 4: {calculate_average([42, 15, 36, 13])}')  # Всё должно работать

# Вывод на консоль:
# Некорректный тип данных для подсчёта суммы - 1
# Некорректный тип данных для подсчёта суммы - ,
# Некорректный тип данных для подсчёта суммы -
# Некорректный тип данных для подсчёта суммы - 2
# Некорректный тип данных для подсчёта суммы - ,
# Некорректный тип данных для подсчёта суммы -
# Некорректный тип данных для подсчёта суммы - 3
# Результат 1: 0
# Некорректный тип данных для подсчёта суммы - Строка
# Некорректный тип данных для подсчёта суммы - Ещё Строка
# Результат 2: 2.0
# В numbers записан некорректный тип данных
# Результат 3: None
# Результат 4: 26.5
